{"version":3,"sources":["./src/environments/environment.ts","./src/app/models/history-item.ts","./src/app/models/game.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/game.service.ts","./src/app/components/new-game/new-game.component.ts","./src/app/components/new-game/new-game.component.html","./src/app/app.module.ts","./src/app/models/bot.ts","./src/app/components/game/game.component.ts","./src/app/components/game/game.component.html","./src/app/workers/bot.worker.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export class HistoryItem {\r\n  constructor(\r\n      private _wordBefore: string,\r\n      private _wordAfter: string,\r\n      private _lastMove: string,\r\n      private _playerName: string\r\n  ) { }\r\n\r\n  get wordBefore() {\r\n      return this._wordBefore;\r\n  }\r\n\r\n  get wordAfter() {\r\n      return this._wordAfter;\r\n  }\r\n\r\n  get lastMove() {\r\n      return this._lastMove;\r\n  }\r\n\r\n  get playerName() {\r\n      return this._playerName;\r\n  }\r\n}","export class GameFinishedError extends Error {\r\n  constructor(m: string) {\r\n    super(m);\r\n    Object.setPrototypeOf(this, GameFinishedError.prototype);\r\n  }\r\n}\r\n\r\nexport class Game {\r\n  public readonly alphabet: string;\r\n  public readonly maxWordLen: number;\r\n  public readonly maxRounds: number;\r\n  private _word: string;\r\n  private _round: number;\r\n\r\n  public get round() {\r\n    return this._round;\r\n  }\r\n\r\n  public get word() {\r\n    return this._word;\r\n  }\r\n\r\n  constructor(alphabet: string, maxWordLen: number, maxRounds: number, round: number = 0, word: string = \"\") {\r\n    this.alphabet = alphabet;\r\n    this.maxWordLen = maxWordLen;\r\n    this.maxRounds = maxRounds;\r\n    this._round = round\r\n    this._word = word\r\n  }\r\n\r\n  public copy(): Game {\r\n    return new Game(this.alphabet, this.maxWordLen, this.maxRounds, this.round, this.word);\r\n  }\r\n\r\n  public reset() {\r\n    this._word = \"\";\r\n    this._round = 0;\r\n  }\r\n\r\n  public append(char: string): string {\r\n    if (this.isFinished()) {\r\n      throw new GameFinishedError(\"Game already finished!\")\r\n    }\r\n    this._word += char;\r\n    this._round++;\r\n    this._checkRepetition()\r\n    return this._word;\r\n  }\r\n\r\n  public isPlayer1Winner(): boolean {\r\n    return this._word.length >= this.maxWordLen\r\n  }\r\n\r\n  public isPlayer2Winner(): boolean {\r\n    return !this.isPlayer1Winner() && this._round >= this.maxRounds\r\n  }\r\n\r\n  public isFinished(): boolean {\r\n    return this.isPlayer1Winner() || this.isPlayer2Winner()\r\n  }\r\n\r\n  private _checkRepetition() {\r\n    const repetitionLength = this._getRepetitionLength()\r\n    if (repetitionLength > 0) {\r\n      const wordLen = this._word.length\r\n      this._word = this._word.substr(0, wordLen - repetitionLength)\r\n    }\r\n  }\r\n\r\n  private _getRepetitionLength(): number {\r\n    const wordLen = this._word.length\r\n    const maxLen = Math.floor(wordLen / 2);\r\n\r\n    for (let len = maxLen; len > 0; len--) {\r\n      const subWord1 = this._word.substr(wordLen - len, len)\r\n      const subWord2 = this._word.substr(wordLen - 2 * len, len)\r\n      if (subWord1 === subWord2) {\r\n        return len;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'repetycje';\n}\n","<nav class=\"navbar navbar-dark bg-primary\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\">Repetitions</a>\n    <a href=\"https://github.com/repetycje/repetycje.github.io\">\n      <img src=\"assets/GitHub-Mark-Light-32px.png\">\n    </a>\n  </div>\n</nav>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\nimport {Game} from \"../models/game\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameService {\n  private _game: Game = null;\n\n  public get game() {\n    return this._game;\n  }\n\n  updateGame(game: Game) {\n    this._game = game;\n  }\n}\n","import {Component, EventEmitter, Output} from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport {Game} from 'src/app/models/game';\nimport {GameService} from \"../../services/game.service\";\n\n@Component({\n    selector: 'app-new-game',\n    templateUrl: './new-game.component.html',\n    styleUrls: ['./new-game.component.scss']\n})\nexport class NewGameComponent {\n\n    public alphabetRaw: string = \"abcdefghijklmnprqstuvwxyz\";\n    public alphabet: string = this.alphabetRaw;\n    public maxWordLen: number = 10;\n    public maxRounds: number = 20;\n\n    constructor(\n        private gameService: GameService,\n        private router: Router\n    ) { }\n\n    onSubmit() {\n        const game = new Game(this.alphabet, this.maxWordLen, this.maxRounds);\n        this.gameService.updateGame(game);\n        this.router.navigate(['/game']);\n    }\n\n    updateAlphabet() {\n        const alphabetList = this.alphabetRaw.split('');\n        const alphabetSet = [...new Set(alphabetList)]\n        this.alphabet = alphabetSet.join('');\n    }\n\n}\n","<div class=\"d-flex justify-content-center align-items-center mt-5\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h2 class=\"card-title\">New Game</h2>\n            <form #gameForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label>Alphabet:</label>\n                    <input type=\"text\" class=\"form-control\" id=\"alphabetRaw\"\n                           [(ngModel)]=\"alphabetRaw\" name=\"alphabetRaw\" (keyup)=\"updateAlphabet()\">\n                    <div class=\"m-2 row justify-content-center\">\n                        <button *ngFor=\"let symbol of alphabet.split('')\" disabled\n                                class=\"col-1 btn btn-outline-primary m-1\">{{symbol}}</button>\n                    </div>\n                </div>\n\n                <div class=\"form-row\">\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"maxWordLen\">Max word length:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"maxWordLen\" [(ngModel)]=\"maxWordLen\"\n                               name=\"maxWordLen\"\n                               min=\"1\" type=\"number\">\n                    </div>\n\n                    <div class=\"form-group col-md-6\">\n                        <label for=\"maxRounds\">Number of rounds:</label>\n                        <input type=\"text\" class=\"form-control\" id=\"maxRounds\" [(ngModel)]=\"maxRounds\" min=\"1\"\n                               name=\"maxRounds\" type=\"number\">\n                    </div>\n                </div>\n                <button class=\"btn btn-block btn-primary\" type=\"submit\">Start</button>\n            </form>\n        </div>\n    </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {GameComponent} from './components/game/game.component';\nimport {NewGameComponent} from './components/new-game/new-game.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {NgxBootstrapIconsModule, arrowRight, plus} from 'ngx-bootstrap-icons';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        GameComponent,\n        NewGameComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        AppRoutingModule,\n        NgbModule,\n        NgxBootstrapIconsModule.pick({arrowRight, plus})\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Game } from \"./game\";\n\nexport class Bot {\n    private game: Game;\n    private node: Node\n\n    constructor(alphabet: string, maxRounds: number, maxWordLen: number, round: number = 0, word: string = \"\") {\n        this.game = new Game(alphabet, maxWordLen, maxRounds, round, word);\n    }\n\n    public init(node: Node) {\n        this.node = node;\n    }\n\n    public makeMove(char: string): string {\n        this.node = this.getNode(char);\n        const start = new Date().getTime();\n        while (new Date().getTime() - start < 800) {\n            let node: Node = this.node;\n            let game: Game = this.game.copy();\n\n            //selection # keep going down the tree based on best UCB values until terminal or unexpanded node\n            while (node.childNodes.length === node.possibleMoves.length) {\n                node = this.selection(node);\n                game.append(node.move)\n            }\n            //expand\n            if (!game.isFinished() && node.childNodes.length < node.possibleMoves.length) {\n                const move = node.possibleMoves[node.childNodes.length]\n                game.append(move);\n                const currNode = node;\n                node = new Node(move, currNode, game.alphabet, !currNode.myMove);\n                currNode.childNodes.push(node);\n            }\n            //rollout\n            while (!game.isFinished()) {\n                const move = this.selectRandom(game.alphabet);\n                game.append(move);\n            }\n            //backpropagate\n            const iWon = game.isPlayer2Winner();\n            while (node !== null) {\n                this.update(node, iWon);\n                node = node.parent;\n            }\n        }\n        let bestNode = this.selection(this.node);\n        this.node = bestNode;\n        bestNode.parent = null;\n        this.game.append(bestNode.move)\n        return bestNode.move;\n    }\n    \n    selectRandom(moves: string): string {\n        return moves[Math.floor(Math.random() * moves.length)]\n    }\n\n    private getNode(lastMove): Node {\n        this.game.append(lastMove);\n        if (!this.node) {\n            return new Node(lastMove, null, this.game.alphabet, false);\n        }\n        else {\n            for (const child of this.node.childNodes) {\n                if (child.move === lastMove) {\n                    child.parent = null;\n                    return child;\n                }\n            }\n            return new Node(lastMove, null, this.game.alphabet, false)\n        }\n    }\n    \n    \n    private ucb(node: Node) {\n        if (node.myMove) {\n            return node.won / node.visits + Math.sqrt(2 * Math.log(node.parent.visits) / node.visits);\n        }\n        else {\n            return node.lost / node.visits + Math.sqrt(2 * Math.log(node.parent.visits) / node.visits);\n        }\n    }\n\n    private selection(node: Node) {\n        return node.childNodes.reduce((prev, current) => (this.ucb(prev) > this.ucb(current)) ? prev : current);\n    }\n\n    private update(node: Node, iWon: boolean) {\n        if (iWon) {\n            node.won++;\n        }\n        else {\n            node.lost++;\n        }\n        node.visits += 1;\n    }\n}\n\nclass Node {\n    parent: Node;\n    possibleMoves: string;\n    childNodes: Node[];\n    won: number;\n    lost: number;\n    visits: number;\n    move: string;\n    myMove: boolean;\n\n    constructor(move: string, parent: Node, possibleMoves: string, myMove: boolean) {\n        this.parent = parent;\n        this.possibleMoves = possibleMoves.split('').sort(function(){return 0.5-Math.random()}).join('');\n        this.childNodes = [];\n        this.won = 0;\n        this.lost = 0;\n        this.visits = 0;\n        this.move = move;\n        this.myMove = myMove;\n    }\n}","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Bot} from 'src/app/models/bot';\nimport {Game} from 'src/app/models/game';\nimport {Router} from \"@angular/router\";\nimport {GameService} from \"../../services/game.service\";\nimport {HistoryItem} from \"../../models/history-item\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n\n@Component({\n    selector: 'app-game',\n    templateUrl: './game.component.html',\n    styleUrls: ['./game.component.scss']\n})\nexport class GameComponent implements OnInit {\n\n    public game: Game;\n    public bot: Bot;\n    public word: string = \"\";\n    public history: HistoryItem[] = [];\n    public canMove: boolean = true;\n\n    private worker: Worker = new Worker('../../workers/bot.worker', {type: 'module'});\n\n    @ViewChild('end') endModal;\n\n    constructor(\n        private router: Router,\n        private gameService: GameService,\n        private modalService: NgbModal\n    ) { }\n\n    ngOnInit(): void {\n        this.setGame();\n        this.worker.onmessage = ({data}) => {\n            this.canMove = true;\n            const symbol = data.symbol;\n            this.bot = data.bot;\n            const wordBefore = this.word;\n            this.word = this.game.append(symbol);\n            this.history.push(new HistoryItem(wordBefore, this.word, symbol, \"Bot\"));\n            this.checkGameStatus();\n        };\n    }\n\n    public setGame() {\n        const game = this.gameService.game;\n        if (!game) {\n            this.router.navigate(['']);\n        } else {\n            this.game = game;\n            this.game.reset();\n            this.bot = new Bot(this.game.alphabet, this.game.maxRounds, this.game.maxWordLen);\n            this.word = \"\";\n            this.history = [];\n        }\n    }\n\n\n    public userMadeMove(symbol: string) {\n        const wordBefore = this.word;\n        this.word = this.game.append(symbol);\n        this.history.push(new HistoryItem(wordBefore, this.word, symbol, \"Player\"));\n        this.checkGameStatus()\n        if (!this.game.isFinished()) {\n            this.canMove = false;\n            this.worker.postMessage({bot: this.bot, symbol: symbol});\n        }\n    }\n\n    public resetGame() {\n        this.setGame();\n    }\n\n    public newGame() {\n        this.router.navigate(['/new-game'])\n    }\n\n    private checkGameStatus() {\n        if (this.game.isFinished()) {\n            this.modalService.open(this.endModal, { centered: true }).result.then(\n                result => { result == 'restart' ? this.resetGame() : this.newGame() },\n                _ => this.newGame()\n            );\n        }\n    }\n\n}\n","<div class=\"mt-5 row\">\n    <div class=\"col-md-7 mb-3\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                <div class=\"row justify-content-between\">\n                    <h3 class=\"col\">Round: <span class=\"badge bg-secondary\">{{ this.game?.round }}\n                        / {{ this.game?.maxRounds }}</span></h3>\n                    <div *ngIf=\"!canMove\" class=\"col row justify-content-end align-items-center mx-2\">\n                        <div class=\"spinner-border text-danger\" role=\"status\"></div>\n                        <span class=\"text-danger ml-3\"><b>Bot thinking...</b></span>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-body\">\n                <h2>Current word:</h2>\n                <div class=\"row justify-content-between align-items-center\">\n                    <div class=\"col-auto\">\n                        <h3 class=\"text-primary\"> {{ this.word }} </h3>\n                    </div>\n                    <div class=\"col-auto\">\n                        <h4><span class=\"badge bg-primary\">{{ this.word.length }} / {{this.game?.maxWordLen}}</span>\n                        </h4>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"m-2 row justify-content-center\">\n                        <button *ngFor=\"let symbol of game?.alphabet.split('')\" (click)=\"userMadeMove(symbol)\"\n                                [disabled]=\"!canMove\"\n                                class=\"col-1 btn btn-outline-primary m-1\">{{symbol}}</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-5 justify-content-center\">\n        <div class=\"row mb-3\">\n            <div class=\"col\">\n                <button class=\"btn btn-block btn-primary\" (click)=\"resetGame()\">Restart</button>\n            </div>\n            <div class=\"col\">\n                <button class=\"btn btn-block btn-primary\" (click)=\"newGame()\">New Game</button>\n            </div>\n        </div>\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h3 class=\"card-title\">History</h3>\n                <ol class=\"list-group list-group-numbered\">\n                    <li *ngFor=\"let historyItem of history; let odd = odd\" class=\"list-group-item\"\n                        [ngClass]=\"{ 'list-group-item-light': odd }\">\n                        <div class=\"row justify-content-between\">\n                            <div class=\"col\">\n                                <span><b>{{ historyItem.wordBefore }} </b></span>\n                                <i-bs name=\"plus\"></i-bs>\n                                <span> {{ historyItem.lastMove }} </span>\n                                <i-bs name=\"arrow-right\"></i-bs>\n                                <span><b> {{ historyItem.wordAfter}}</b></span>\n                            </div>\n                            <div class=\"col-auto\">\n                                <span class=\"badge\"\n                                      [ngClass]=\"{'bg-primary': historyItem.playerName == 'Player', 'bg-danger': historyItem.playerName == 'Bot'}\">\n                                    {{ historyItem.playerName }}\n                                </span>\n                            </div>\n                        </div>\n                    </li>\n                </ol>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #end let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Game Over</h4>\n    </div>\n    <div class=\"modal-body\">\n        <div class=\"row justify-content-center\">\n            <h3>\n                <span *ngIf=\"this.game?.isPlayer1Winner()\" class=\"text-primary\">You won!</span>\n                <span *ngIf=\"this.game?.isPlayer2Winner()\" class=\"text-danger\">Bot won</span>\n            </h3>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"modal.close('restart')\">Restart</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"modal.close('new')\">New game</button>\n    </div>\n</ng-template>","module.exports = __webpack_public_path__ + \"0.worker.js\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GameComponent } from './components/game/game.component';\nimport {NewGameComponent} from \"./components/new-game/new-game.component\";\n\nconst routes: Routes = [\n  { path: 'game', component: GameComponent },\n  { path: 'new-game', component: NewGameComponent },\n  { path: '**', redirectTo: 'new-game' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}