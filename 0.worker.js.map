{"version":3,"sources":["webpack/bootstrap","./src/app/models/game.ts","./src/app/models/bot.ts","./src/app/workers/bot.worker.ts"],"names":[],"mappings":"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","file":"0.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"hUQG\");\n","export class GameFinishedError extends Error {\r\n  constructor(m: string) {\r\n    super(m);\r\n    Object.setPrototypeOf(this, GameFinishedError.prototype);\r\n  }\r\n}\r\n\r\nexport class Game {\r\n  public readonly alphabet: string;\r\n  public readonly maxWordLen: number;\r\n  public readonly maxRounds: number;\r\n  private _word: string;\r\n  private _round: number;\r\n\r\n  public get round() {\r\n    return this._round;\r\n  }\r\n\r\n  public get word() {\r\n    return this._word;\r\n  }\r\n\r\n  constructor(alphabet: string, maxWordLen: number, maxRounds: number, round: number = 0, word: string = \"\") {\r\n    this.alphabet = alphabet;\r\n    this.maxWordLen = maxWordLen;\r\n    this.maxRounds = maxRounds;\r\n    this._round = round\r\n    this._word = word\r\n  }\r\n\r\n  public copy(): Game {\r\n    return new Game(this.alphabet, this.maxWordLen, this.maxRounds, this.round, this.word);\r\n  }\r\n\r\n  public reset() {\r\n    this._word = \"\";\r\n    this._round = 0;\r\n  }\r\n\r\n  public append(char: string): string {\r\n    if (this.isFinished()) {\r\n      throw new GameFinishedError(\"Game already finished!\")\r\n    }\r\n    this._word += char;\r\n    this._round++;\r\n    this._checkRepetition()\r\n    return this._word;\r\n  }\r\n\r\n  public isPlayer1Winner(): boolean {\r\n    return this._word.length >= this.maxWordLen\r\n  }\r\n\r\n  public isPlayer2Winner(): boolean {\r\n    return !this.isPlayer1Winner() && this._round >= this.maxRounds\r\n  }\r\n\r\n  public isFinished(): boolean {\r\n    return this.isPlayer1Winner() || this.isPlayer2Winner()\r\n  }\r\n\r\n  private _checkRepetition() {\r\n    const repetitionLength = this._getRepetitionLength()\r\n    if (repetitionLength > 0) {\r\n      const wordLen = this._word.length\r\n      this._word = this._word.substr(0, wordLen - repetitionLength)\r\n    }\r\n  }\r\n\r\n  private _getRepetitionLength(): number {\r\n    const wordLen = this._word.length\r\n    const maxLen = Math.floor(wordLen / 2);\r\n\r\n    for (let len = maxLen; len > 0; len--) {\r\n      const subWord1 = this._word.substr(wordLen - len, len)\r\n      const subWord2 = this._word.substr(wordLen - 2 * len, len)\r\n      if (subWord1 === subWord2) {\r\n        return len;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n","import { Game } from \"./game\";\n\nexport class Bot {\n    private game: Game;\n    private node: Node\n\n    constructor(alphabet: string, maxRounds: number, maxWordLen: number, round: number = 0, word: string = \"\") {\n        this.game = new Game(alphabet, maxWordLen, maxRounds, round, word);\n    }\n\n    public init(node: Node) {\n        this.node = node;\n    }\n\n    public makeMove(char: string): string {\n        this.node = this.getNode(char);\n        const start = new Date().getTime();\n        while (new Date().getTime() - start < 800) {\n            let node: Node = this.node;\n            let game: Game = this.game.copy();\n\n            //selection # keep going down the tree based on best UCB values until terminal or unexpanded node\n            while (node.childNodes.length === node.possibleMoves.length) {\n                node = this.selection(node);\n                game.append(node.move)\n            }\n            //expand\n            if (!game.isFinished() && node.childNodes.length < node.possibleMoves.length) {\n                const move = node.possibleMoves[node.childNodes.length]\n                game.append(move);\n                const currNode = node;\n                node = new Node(move, currNode, game.alphabet, !currNode.myMove);\n                currNode.childNodes.push(node);\n            }\n            //rollout\n            while (!game.isFinished()) {\n                const move = this.selectRandom(game.alphabet);\n                game.append(move);\n            }\n            //backpropagate\n            const iWon = game.isPlayer2Winner();\n            while (node !== null) {\n                this.update(node, iWon);\n                node = node.parent;\n            }\n        }\n        let bestNode = this.selection(this.node);\n        this.node = bestNode;\n        bestNode.parent = null;\n        this.game.append(bestNode.move)\n        return bestNode.move;\n    }\n    \n    selectRandom(moves: string): string {\n        return moves[Math.floor(Math.random() * moves.length)]\n    }\n\n    private getNode(lastMove): Node {\n        this.game.append(lastMove);\n        if (!this.node) {\n            return new Node(lastMove, null, this.game.alphabet, false);\n        }\n        else {\n            for (const child of this.node.childNodes) {\n                if (child.move === lastMove) {\n                    child.parent = null;\n                    return child;\n                }\n            }\n            return new Node(lastMove, null, this.game.alphabet, false)\n        }\n    }\n    \n    \n    private ucb(node: Node) {\n        if (node.myMove) {\n            return node.won / node.visits + Math.sqrt(2 * Math.log(node.parent.visits) / node.visits);\n        }\n        else {\n            return node.lost / node.visits + Math.sqrt(2 * Math.log(node.parent.visits) / node.visits);\n        }\n    }\n\n    private selection(node: Node) {\n        return node.childNodes.reduce((prev, current) => (this.ucb(prev) > this.ucb(current)) ? prev : current);\n    }\n\n    private update(node: Node, iWon: boolean) {\n        if (iWon) {\n            node.won++;\n        }\n        else {\n            node.lost++;\n        }\n        node.visits += 1;\n    }\n}\n\nclass Node {\n    parent: Node;\n    possibleMoves: string;\n    childNodes: Node[];\n    won: number;\n    lost: number;\n    visits: number;\n    move: string;\n    myMove: boolean;\n\n    constructor(move: string, parent: Node, possibleMoves: string, myMove: boolean) {\n        this.parent = parent;\n        this.possibleMoves = possibleMoves.split('').sort(function(){return 0.5-Math.random()}).join('');\n        this.childNodes = [];\n        this.won = 0;\n        this.lost = 0;\n        this.visits = 0;\n        this.move = move;\n        this.myMove = myMove;\n    }\n}","/// <reference lib=\"webworker\" />\n\nimport {Bot} from \"../models/bot\";\n\naddEventListener('message', ({ data }) => {\n  const game = data.bot.game;\n  const node = data.bot.node;\n  const bot = new Bot(game.alphabet, game.maxRounds, game.maxWordLen, game._round, game._word);\n  bot.init(node);\n  const symbol = data.symbol;\n  const botSymbol = bot.makeMove(symbol);\n  postMessage({symbol: botSymbol, bot: bot});\n});\n"],"sourceRoot":"webpack:///"}