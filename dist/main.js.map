{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/game/game.component.ts","./src/app/game/game.component.html","./src/app/new-game/new-game.component.ts","./src/app/new-game/new-game.component.html","./src/models/bot.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/models/game.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'repetycje';\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { GameComponent } from './game/game.component';\r\nimport { NewGameComponent } from './new-game/new-game.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    GameComponent,\r\n    NewGameComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Bot } from 'src/models/bot';\r\nimport { Game } from 'src/models/game';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.scss']\r\n})\r\nexport class GameComponent implements OnInit {\r\n\r\n  public game: Game;\r\n  public bot: Bot;\r\n  public word: string = \"\";\r\n  public wordsHistory: string[] = [];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public setGame($event: Game) {\r\n    this.game = $event;\r\n    this.bot = new Bot(this.game.alphabet, this.game.maxRounds, this.game.maxWordLen);\r\n  }\r\n\r\n  public resetGame() {\r\n    this.game = undefined;\r\n    this.bot = undefined;\r\n    this.word = \"\";\r\n  }\r\n\r\n\r\n  public userMadeMove($event: any) {\r\n    if (![...this.game.alphabet].some(l => l === $event.key)) {\r\n      setTimeout(() => $event.path[0].value = this.word, 20);\r\n      return;\r\n    }\r\n    this.word = this.game.append($event.key);\r\n    this.wordsHistory.push(this.word);\r\n    if (!this.game.isGameFinished()) {\r\n      const letter = this.bot.makeMove($event.key);\r\n      let afterBotMove = this.word + letter;\r\n      this.wordsHistory.push(afterBotMove);\r\n\r\n      this.word = this.game.append(letter);\r\n      if (this.word.length < afterBotMove.length){\r\n        this.wordsHistory.push(this.word);\r\n      }\r\n    }\r\n    setTimeout(() => $event.path[0].value = this.word, 20);\r\n\r\n    if (this.game.isGameFinished()) {\r\n      if (this.game.isPlayer1Winner()) {\r\n        alert('Player 1 won');\r\n      }\r\n      else {\r\n        alert('Player 2 won');\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<app-new-game *ngIf=\"!game\" (newGame)=\"setGame($event)\"></app-new-game>\r\n\r\n<div *ngIf=\"game\">\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <button class=\"btn btn-success\" (click)=\"resetGame()\">New Game</button>\r\n            <input (keydown)=\"userMadeMove($event)\">\r\n            rounds: {{this.game?.round}} / {{2 * this.game?.round}}\r\n        </div>\r\n        <p *ngFor=\"let word of wordsHistory\">{{word}}</p>\r\n    </div>\r\n</div>","import { Component, EventEmitter, Output } from '@angular/core';\r\nimport { Game } from 'src/models/game';\r\n\r\n@Component({\r\n  selector: 'app-new-game',\r\n  templateUrl: './new-game.component.html',\r\n  styleUrls: ['./new-game.component.scss']\r\n})\r\nexport class NewGameComponent {\r\n\r\n  public alphabet: string = \"asd\";\r\n  public maxWordLen: number = 10;\r\n  public maxRounds: number = 10;\r\n\r\n  @Output() newGame = new EventEmitter<Game>();\r\n\r\n\r\n  onSubmit() {\r\n    this.newGame.next(new Game(this.alphabet, this.maxWordLen, this.maxRounds));\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center align-items-center\">\r\n    <div>\r\n        <form #gameForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\r\n            <div class=\"form-group\">\r\n                <label for=\"alphabet\">Alphabet</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"alphabet\" required [(ngModel)]=\"alphabet\" name=\"alphabet\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"maxWordLen\">Max word length</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"maxWordLen\" [(ngModel)]=\"maxWordLen\" name=\"maxWordLen\" min=\"1\" type=\"number\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"maxRounds\">Number of rounds</label>\r\n                <input type=\"text\" class=\"form-control\" id=\"maxRounds\" [(ngModel)]=\"maxRounds\" min=\"1\" name=\"maxRounds\" type=\"number\">\r\n            </div>\r\n            <button class=\"btn btn-success\" type=\"submit\">Start</button>\r\n        </form>\r\n    </div>\r\n</div>","export class Bot {\r\n    private _alphabet: string;\r\n    private _word: string;\r\n    private _maxRounds: number;\r\n    private _maxWordLen: number;\r\n\r\n    constructor(alphabet: string, maxRounds: number, maxWordLen:number) {\r\n        this._alphabet = alphabet;\r\n        this._maxRounds = maxRounds;\r\n        this._maxWordLen = maxWordLen;\r\n        this._word = \"\";\r\n    }\r\n\r\n    public makeMove(char: string): string {\r\n        this._word += char;\r\n        const choice = this._alphabet[1];\r\n        this._word += choice;\r\n        return choice;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { GameComponent } from './game/game.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: GameComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export class GameFinishedError extends Error {\r\n  constructor(m: string) {\r\n    super(m);\r\n    Object.setPrototypeOf(this, GameFinishedError.prototype);\r\n  }\r\n}\r\n\r\nexport class Game {\r\n  public readonly alphabet: string;\r\n  public readonly maxWordLen: number;\r\n  public readonly maxRounds: number;\r\n  private _word: string = \"\";\r\n  private _round: number = 0;\r\n\r\n  public get round() {\r\n    return this._round;\r\n  }\r\n\r\n  constructor(alphabet: string, maxWordLen: number, maxRounds: number) {\r\n    this.alphabet = alphabet;\r\n    this.maxWordLen = maxWordLen;\r\n    this.maxRounds = maxRounds;\r\n  }\r\n\r\n  public append(char: string): string {\r\n    if (this.isGameFinished()) {\r\n      throw new GameFinishedError(\"Game already finished!\")\r\n    }\r\n    this._word += char;\r\n    this._round++;\r\n    this._checkRepetition()\r\n    return this._word;\r\n  }\r\n\r\n  public isPlayer1Winner(): boolean {\r\n    return this._word.length >= this.maxWordLen\r\n  }\r\n\r\n  public isPlayer2Winner(): boolean {\r\n    return !this.isPlayer1Winner() && this._round >= this.maxRounds * 2\r\n  }\r\n\r\n  public isGameFinished(): boolean {\r\n    return this.isPlayer1Winner() || this.isPlayer2Winner()\r\n  }\r\n\r\n  private _checkRepetition() {\r\n    const repetitionLength = this._getRepetitionLength()\r\n    if (repetitionLength > 0) {\r\n      const wordLen = this._word.length\r\n      this._word = this._word.substr(0, wordLen - repetitionLength)\r\n    }\r\n  }\r\n\r\n  private _getRepetitionLength(): number {\r\n    const wordLen = this._word.length\r\n    const maxLen = Math.floor(wordLen / 2);\r\n\r\n    for (let len = maxLen; len > 0; len--) {\r\n      const subWord1 = this._word.substr(wordLen - len, len)\r\n      const subWord2 = this._word.substr(wordLen - 2 * len, len)\r\n      if (subWord1 === subWord2) {\r\n        return len;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}